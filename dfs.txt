def DFS(graph, start):
    visited = set()
    stack = [start]
    
    while stack:
     
        print(f"Current stack: {stack}")
        
        node = stack.pop()
        print(f"Removing node: {node}")
        
        if node not in visited:
            print(f"Visiting node: {node}")
            visited.add(node)
            
            for neighbor in reversed(graph[node]):
                if neighbor not in visited:
                    print(f"Adding neighbor to stack: {neighbor}")
                    stack.append(neighbor)

graph = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F'],
    'D': [],
    'E': ['F'],
    'F': []
}

DFS(graph, 'A')